
======= yul_function_name_clashes/input.yul (EVM) =======

Pretty printed source:
object "object" {
    code {
        {
            let a
            let b
            a := z()
            b := z_1()
            sstore(a, b)
        }
        function z() -> y
        { y := calldataload(0) }
        function z_1() -> y
        { y := calldataload(0x20) }
    }
}


Binary representation:
6005600f565b600b6014565b9055005b5f3590565b6020359056

Text representation:
  tag_3
  tag_1
  jump	// in
tag_3:
  tag_4
  tag_2
  jump	// in
tag_4:
  swap1
  sstore
  stop
tag_1:
  0x00
  calldataload
  swap1
  jump	// out
tag_2:
  0x20
  calldataload
  swap1
  jump	// out
